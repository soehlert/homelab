services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: traefik-proxy
    volumes:
      - ts-data-vol:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_HOSTNAME=traefik-proxy
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=--accept-routes
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - traefik-net

  traefik:
    image: traefik:v3.3
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data:/etc/traefik
      - ./traefik-data/dynamic_conf:/etc/traefik/dynamic_conf:ro
      - ./letsencrypt:/letsencrypt
      - /etc/localtime:/etc/localtime:ro
    network_mode: service:tailscale
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CF_API_TOKEN}
      - MY_EMAIL=${MY_EMAIL}
      - MY_DOMAIN=${MY_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${MY_DOMAIN}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.api@internal.loadbalancer.server.port=8080"
    restart: unless-stopped
    depends_on:
      - tailscale

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - ./portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-net 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${MY_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.service=portainer-svc"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
    restart: unless-stopped
    depends_on:
      - tailscale
      - traefik

volumes:
  ts-data-vol:

networks:
  traefik-net:
    external: true

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ${PROMETHEUS_CONFIG_PATH:-/opt/homelab/traefik/monitoring-data/prometheus}:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - traefik-net
      - monitoring-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus-rtr.rule=Host(`prometheus.soehlert.com`)"
      - "traefik.http.routers.prometheus-rtr.entrypoints=websecure"
      - "traefik.http.routers.prometheus-rtr.service=prometheus-svc"
      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - INFLUXDB_INIT_MODE=setup
      - INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    networks:
      - traefik-net
      - monitoring-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb-rtr.rule=Host(`influx.soehlert.com`)"
      - "traefik.http.routers.influxdb-rtr.entrypoints=websecure"
      - "traefik.http.routers.influxdb-rtr.service=influxdb-svc"
      - "traefik.http.services.influxdb-svc.loadbalancer.server.port=8086"
      - "traefik.http.services.influxdb-svc.loadbalancer.server.scheme=http"
      - "traefik.http.middlewares.influxdb-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.influxdb-headers.headers.customRequestHeaders.X-Forwarded-Host=influx.soehlert.com"
      - "traefik.http.routers.influxdb-rtr.middlewares=influxdb-headers"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ${GRAFANA_CONFIG_PATH:-/opt/homelab/traefik/monitoring-data/grafana}/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.soehlert.com
      - GF_SERVER_DOMAIN=soehlert.com
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_SERVER_ROUTER_LOGGING=true
    depends_on:
      - prometheus
      - influxdb
    networks:
      - traefik-net
      - monitoring-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-rtr.rule=Host(`grafana.soehlert.com`)"
      - "traefik.http.routers.grafana-rtr.entrypoints=websecure"
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.grafana-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.grafana-headers.headers.customRequestHeaders.X-Forwarded-Host=grafana.soehlert.com"
      - "traefik.http.routers.grafana-rtr.middlewares=grafana-headers"

volumes:
  prometheus_data:
  influxdb_data:
  grafana_data:

networks:
  traefik-net:
    external: true
  monitoring-net:
    driver: bridge
